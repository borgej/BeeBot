@using System.Net.Cache
<!DOCTYPE html>
<html lang="EN">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>YTBot v.2 RC1</title>
    <link href="https://fonts.googleapis.com/css?family=Karla" rel="stylesheet">
    @Styles.Render("~/Content/css")
    @Scripts.Render("~/bundles/modernizr")
    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/bootstrap")
    @Scripts.Render("~/bundles/signalr")
    @Scripts.Render("https://cdn.jsdelivr.net/npm/pretty-checkbox@3.0/dist/pretty-checkbox.min.css")

    
    <script src="https://cdn.jsdelivr.net/npm/gasparesganga-jquery-loading-overlay@2.0.2/dist/loadingoverlay.min.js"></script>
    <!--Reference the autogenerated SignalR hub script. -->
    <script src="~/signalr/hubs"></script>
    <script src="~/Scripts/Signalr.js"></script>
    <link href='http://fonts.googleapis.com/css?family=Open+Sans:400,600' rel='stylesheet' type='text/css'>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/tether/1.4.0/js/tether.min.js" integrity="sha384-DztdAPBWPRXSA/3eYEEUWrWCy7G5KFbe8fFjk5JAIxUYHKkDx6Qin1DkWx51bBrb" crossorigin="anonymous"></script>
</head>
<body>
    <div class="container-fluid">
        <div class="row flex-nowrap wrapper mr-1">
            <div class="float-left pl-0 mr-1 pr-0 collapse width show" id="sidebar">
                <div class="list-group border-0 card text-center text-md-left flex-grow-1">
                    <div class="text-center d-inline-block collapsed mt-1">

                        <a href="@Url.Action("Index", "Home")" class=""><img class="ytbotLogo" src="@Url.Content("~/Content/ytb_logo_small.png")" /></a>
                        <a href="@Url.Action("Index", "Home")" class=""><img class="ytbotLogoResponsive mb-3" src="@Url.Content("~/Content/ytb_logo_small_responsive.png")" /></a>
                    </div>
                    <div class="text-center d-inline-block collapsed">
                        <a href="@Url.Action("Index", "Home")" class="channelMenuHeader ">@Html.Action("ChannelName", "Home")</a>
                    </div>
                    <div class="text-center d-lg-inline-block collapsed">
                        <div class="botstatus mb-3">
                            <p style="display: inline !important;"><i class="fa fa-spinner fa-spin whi statusloader" style="color: white"></i> <span class="botconnectionstatus badge badge-info" style="font-size: 14px;"></span></p>
                        </div>
                    </div>

                    <a href="@Url.Action("Desktop", "Home")" class="list-group-item d-inline-block collapsed menuButton" data-parent="#sidebar" id="controlbtn"><i class="fa fa-desktop"></i> <span class="d-none d-md-inline">Dashboard</span></a>
                    <a href="@Url.Action("Control", "Home")" class="list-group-item d-inline-block collapsed menuButton" data-parent="#sidebar" id="controlbtn"><i class="fa fa-window-maximize"></i> <span class="d-none d-md-inline">Console</span></a>
                    <a href="@Url.Action("Stream", "Home")" class="list-group-item d-inline-block collapsed menuButton" data-parent="#sidebar" id="streambtn"><i class="fa fa-chevron-circle-right"></i> <span class="d-none d-md-inline">Stream info</span></a>
                    <a href="#menu2" class="list-group-item d-inline-block collapsed" data-toggle="collapse" aria-expanded="false"><i class="fa fa-comments-o"></i> <span class="d-none d-md-inline">Chat</span> </a>
                    <div class="collapse" id="menu2" data-parent="#sidebar">
                        <a href="https://www.twitch.tv/popout/@{Html.RenderAction("GetChannel", "Home");}/chat?popout=" onclick="window.open(this.href, 'targetWindow', 'toolbar=no,location=no,status=no,menubar=no,scrollbars=yes,resizable=yes,width=380,height=700');return false;" class="list-group-item "><i class="fa fa-comments"></i>Popup Stream Chat</a>
                        <a href="@Url.Action("ChatOptions", "Home")" class="list-group-item "><i class="fa fa-cog"></i> Options</a>
                        <a href="@Url.Action("ChatStats", "Home")" class="list-group-item "><i class="fa fa-bar-chart"></i> Stats</a>
                        <a href="@Url.Action("ChatLog", "Home")" class="list-group-item "><i class="fa fa-database"></i> Log</a>
                    </div>

                    <a href="@Url.Action("SongRequests", "Home")" class="list-group-item d-inline-block collapsed menuButton" data-parent="#sidebar" id="songreqbtn"><i class="fa fa-music"></i> <span class="d-none d-md-inline">Song requests</span></a>
                    <a href="@Url.Action("Giveaways", "Home")" class="list-group-item d-inline-block collapsed menuButton" data-parent="#sidebar" id="giftsbtn"><i class="fa fa-gift"></i> <span class="d-none d-md-inline">Giveaways</span></a>
                    <a href="@Url.Action("Polls", "Home")" class="list-group-item d-inline-block collapsed menuButton" data-parent="#sidebar" id="pollsbtn"><i class="fa fa-question"></i> <span class="d-none d-md-inline">Polls</span></a>

                    <a href="@Url.Action("LoyaltyHtml", "Home")" class="list-group-item d-inline-block collapsed menuButton" data-parent="#sidebar" id="loyaltybtn"><i class="fa fa-money"></i> <span class="d-none d-md-inline">Loyalty</span></a>
                    <a href="@Url.Action("Triggers", "Home")" class="list-group-item d-inline-block collapsed menuButton" data-parent="#sidebar" id="triggerbtn"><i class="fa fa-exclamation-circle"></i> <span class="d-none d-md-inline">Triggers</span></a>
                    <a href="@Url.Action("Timers", "Home")" class="list-group-item d-inline-block collapsed menuButton" data-parent="#sidebar" id="timersbtn"><i class="fa fa-clock-o"></i> <span class="d-none d-md-inline">Timers</span></a>

                    <a href="#menu1" class="list-group-item d-inline-block collapsed" data-toggle="collapse" aria-expanded="false"><i class="fa fa-wrench"></i> <span class="d-none d-md-inline">Preferences</span> </a>
                    <div class="collapse" id="menu1" data-parent="#sidebar">
                        <a href="@Url.Action("Preferences", "Home")" class="list-group-item"><i class="fa fa-cog"></i> Bot setup</a>
                        <a href="@Url.Action("Index", "Manage")" class="list-group-item"><i class="fa fa-user-circle"></i> User settings</a>


                    </div>
                    @{
        if (Request.IsAuthenticated)
        {
                <a href="@Url.Action("LogOut", "Home")" class="list-group-item d-inline-block collapsed menuButton" data-parent="#sidebar" id="logoutbtn"><i class="fa fa-sign-out"></i> <span class="d-none d-md-inline">Log out</span></a>
}

                    }
                    @*<a href="@Url.Action("TriggerPlay", "Home")" class="list-group-item d-inline-block collapsed menuButton" data-parent="#sidebar" id="pollsbtn"><i class="fa fa-question"></i> <span class="d-none d-md-inline">Video triggers</span></a>*@
                    <div class=" text-center ytbotLinks align-bottom" id="footerLinks">
                        <div class="footerLink">@Html.ActionLink("FAQ", "Faq", "Home")</div>
                        <div class="footerLink">@Html.ActionLink("About", "About", "Home")</div>
                    </div>
                    <div class="footer text-center ytbotCopyright" id="footer">
                        v.2 RC1 &copy; @DateTime.Now.Year BJSolutions
                    </div>
                </div>
            </div>
            <main class="main col" >
                <div class="flex-grow-1">
                    <a href="#" data-target="#sidebar" data-toggle="collapse" class="pull-left"><i class="fa fa-navicon fa-2x py-2 p-1"></i></a>
                </div>

                <div class="page-header">

                </div>
                <div class="maincontent mr-1 mb-1">
                    @RenderBody()
                </div>


                <div>


                </div>
            </main>

        </div>
    </div>


@{

        if (Request.IsAuthenticated)
        {
            
            <script type="text/javascript">


                var botConnected = false;

                var channel = "@{ Html.RenderAction("ChannelName", "Home"); }";
                var butUsername = "@{ Html.RenderAction("BotUsername", "Home"); }";
                var botPassword = "@{ Html.RenderAction("BotPassword", "Home"); }";

                // Check bot status every 10 seconds
                setInterval(function () {
                    $.connection.twitchHub.server.botStatus("test", "test", "test");
                }, 10000);

                $.connection.twitchHub.client.BotStatus = function (connected) {
                    console.log("BotStatus: " + connected.info);
                    botConnected = connected.connected;
                    tryBotReconnectIfDisconnected();
                    $(".statusloader").addClass("dontshow");
                    $(".botconnectionstatus").text(connected.info);
                    if (connected.connected) {
                        $(".botconnectionstatus").removeClass("badge-info").removeClass("badge-danger").removeClass("badge-warning").addClass("badge-success");
                    } else {
                        
                        $(".botconnectionstatus").removeClass("badge-info").removeClass("badge-danger").removeClass("badge-success").addClass("badge-warning");
                    }
                };
                $.connection.hub.start().done(function () {
                    $.connection.twitchHub.server.botStatus(channel, butUsername, botPassword);
                });

                // try to reconnect on disconnect
                $.connection.hub.disconnected(function () {
                    console.log("Disconnected from web-server...");
                    setTimeout(function () {
                        tryReconnect();

                    }, 5000); // Restart connection after 5 seconds.
                });

                $.connection.hub.error(function (error) {
                    console.log('SignalR error: ' + error);
                });

                twitchHub.client.SaveCallback = function(ret) {
                    console.log(ret);

                    if (ret.data == "1") {
                        console.log(ret.message);
                        $.amaran({
                            'theme': 'colorful',
                            'content'   :{
                                bgcolor:'#27ae60',
                                color:'#fff',
                                message: ret.message,
                            },
                            'closeOnClick':false,
                            'inEffect':'slideTop'
                        });
                    } else {
                        console.log(ret.message);
                        $.amaran({
                            'theme': 'colorful',
                            'content': {
                                bgcolor: '#ff3300',
                                color: '#fff',
                                message: ret.message,
                            },
                            'closeOnClick': false,
                            'inEffect': 'slideTop'
                        });
                    }
                }

                // Reconnect bot to Twitch if disconnected
                function tryBotReconnectIfDisconnected() {
                    try {
                        if (botConnected == false) {
                            $.connection.twitchHub.server.reconnectBot("@{Html.RenderAction("GetUsername", "Home");}", "@{Html.RenderAction("GetPassword", "Home");}", "@{Html.RenderAction("GetChannel", "Home");}");
                        }
                    } catch (e) {
                        $.amaran({
                            'theme': 'colorful',
                            'content': {
                                bgcolor: '#ff3300',
                                color: '#fff',
                                message: e,
                            },
                            'closeOnClick': false,
                            'inEffect': 'slideTop'

                        });
                    }
                }

                // Reconnect signalR if disconnected from web-server
                function tryReconnect() {
                    $(".botconnectionstatus").text("Disconnected");
                    $(".botconnectionstatus").removeClass("badge-info").removeClass("badge-warning").removeClass("badge-success").addClass("badge-danger");
                    console.log("Reconnecting to web-server...");
                    try {
                            $.amaran({
                                'theme': 'colorful',
                                'content': {
                                    bgcolor: '#0099ff',
                                    color: '#fff',
                                    message: "Reconnecting to web-server...",
                                },
                                'closeOnClick': false,
                                'inEffect': 'slideTop'
                            });
                            $.connection.hub.start();
                    } catch (e) {
                        console.log("Error on trying to reconnect: " + e);
                        $.amaran({
                            'theme': 'colorful',
                            'content': {
                                bgcolor: '#ff3300',
                                color: '#fff',
                                message: e,
                            },
                            'closeOnClick': false,
                            'inEffect': 'slideTop'

                        });
                    }

                }

                function sleep(ms) {
                    return new Promise(resolve => setTimeout(resolve, ms));
                }
            </script>
        }
    }
    @*@RenderSection("scripts", required: true)*@

</body>
</html>